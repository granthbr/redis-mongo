version: '2'

services:
  redis:
    image: redis:alpine
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
  mongo:
    image: mongo:3.2
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka

    ports:
      - "9092:9092"
    links:
      - zookeeper:zk
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
      KAFKA_CREATE_TOPICS: "DATA:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  elasticdata:
    image: elasticsearch:1.7.0
    container_name: elasticdata
    volumes:
      - elasticsearch-data:/var/lib/elasticsearch/data
      - elasticsearch-logs:/var/lib/elasticsearch/logs
    command: chown elasticsearch:elasticsearch /var/lib/elasticsearch/logs /var/lib/elasticsearch/data
  elasticsearch:
    image: elasticsearch:1.7.0
    container_name: elasticsearch
    volumes_from:
      - elasticdata
    volumes:
      - /home/docker/conf-files/es-conf/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    networks:
      - logging

  proxyelk:
    image: nginx:1.9.3
    container_name: proxyelk
    ports:
      - "5600:5600"
    volumes:
      - /home/docker/conf-files/proxy-conf:/etc/nginx/conf.d
    depends_on:
      - kibana
    networks:
      - logging
   kibana:
    image: kibana:4.1.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
      - logstash
    networks:
      - logging
   logstash:
    image: logstash:1.5.3
    container_name: logstash
    ports:
      - "5000:5000/udp"
    volumes:
      - /home/docker/conf-files/logstash-conf:/opt/logstash/conf.d
    command: -f /opt/logstash/conf.d/logstash.conf
    networks:
      - logging
volumes:
  mongo-data:
  redis-data:
  elasticsearch-data:
  elasticsearch-logs:
networks:
  logging:

